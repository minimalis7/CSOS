// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    
    // if inc bit is set, take the value from Add16's last cycle, 
    // else take the registers out from last cycle
    Mux16(a=regOut, b=addOut, sel=inc, out=incOut);

    // of load bit is set, take the value from the input,
    // else take the value from the inc mux!
    Mux16(a=incOut, b=in, sel=load, out=loadOut);

    // if reset bit is set take 0,
    // else take the value from the load mux
    Mux16(a=loadOut, b=false, sel=reset, out=regIn);

    //storage element for the counter
    Register(in=regIn, load=true, out=regOut, out=out);

    // add the value of 1 to the output of the register 
    // and feed the result back for the next clock cycle
    Add16(a=regOut, b[0]=true, out=addOut);

}
